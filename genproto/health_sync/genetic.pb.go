// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: genetic.proto

package health_sync

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GeneticCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DateType     string `protobuf:"bytes,2,opt,name=date_type,json=dateType,proto3" json:"date_type,omitempty"`
	DateValue    string `protobuf:"bytes,3,opt,name=date_value,json=dateValue,proto3" json:"date_value,omitempty"`
	AnalysisDate string `protobuf:"bytes,4,opt,name=analysis_date,json=analysisDate,proto3" json:"analysis_date,omitempty"`
}

func (x *GeneticCreate) Reset() {
	*x = GeneticCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_genetic_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneticCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneticCreate) ProtoMessage() {}

func (x *GeneticCreate) ProtoReflect() protoreflect.Message {
	mi := &file_genetic_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneticCreate.ProtoReflect.Descriptor instead.
func (*GeneticCreate) Descriptor() ([]byte, []int) {
	return file_genetic_proto_rawDescGZIP(), []int{0}
}

func (x *GeneticCreate) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GeneticCreate) GetDateType() string {
	if x != nil {
		return x.DateType
	}
	return ""
}

func (x *GeneticCreate) GetDateValue() string {
	if x != nil {
		return x.DateValue
	}
	return ""
}

func (x *GeneticCreate) GetAnalysisDate() string {
	if x != nil {
		return x.AnalysisDate
	}
	return ""
}

type GeneticList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*GeneticRes `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GeneticList) Reset() {
	*x = GeneticList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_genetic_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneticList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneticList) ProtoMessage() {}

func (x *GeneticList) ProtoReflect() protoreflect.Message {
	mi := &file_genetic_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneticList.ProtoReflect.Descriptor instead.
func (*GeneticList) Descriptor() ([]byte, []int) {
	return file_genetic_proto_rawDescGZIP(), []int{1}
}

func (x *GeneticList) GetList() []*GeneticRes {
	if x != nil {
		return x.List
	}
	return nil
}

type GeneticUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId       string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DateType     string `protobuf:"bytes,3,opt,name=date_type,json=dateType,proto3" json:"date_type,omitempty"`
	DateValue    string `protobuf:"bytes,4,opt,name=date_value,json=dateValue,proto3" json:"date_value,omitempty"`
	AnalysisDate string `protobuf:"bytes,5,opt,name=analysis_date,json=analysisDate,proto3" json:"analysis_date,omitempty"`
}

func (x *GeneticUpdate) Reset() {
	*x = GeneticUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_genetic_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneticUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneticUpdate) ProtoMessage() {}

func (x *GeneticUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_genetic_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneticUpdate.ProtoReflect.Descriptor instead.
func (*GeneticUpdate) Descriptor() ([]byte, []int) {
	return file_genetic_proto_rawDescGZIP(), []int{2}
}

func (x *GeneticUpdate) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GeneticUpdate) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GeneticUpdate) GetDateType() string {
	if x != nil {
		return x.DateType
	}
	return ""
}

func (x *GeneticUpdate) GetDateValue() string {
	if x != nil {
		return x.DateValue
	}
	return ""
}

func (x *GeneticUpdate) GetAnalysisDate() string {
	if x != nil {
		return x.AnalysisDate
	}
	return ""
}

type GeneticRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId       string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DateType     string `protobuf:"bytes,3,opt,name=date_type,json=dateType,proto3" json:"date_type,omitempty"`
	DateValue    string `protobuf:"bytes,4,opt,name=date_value,json=dateValue,proto3" json:"date_value,omitempty"`
	AnalysisDate string `protobuf:"bytes,5,opt,name=analysis_date,json=analysisDate,proto3" json:"analysis_date,omitempty"`
	DeletedAt    string `protobuf:"bytes,6,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	CreatedAt    string `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt    string `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *GeneticRes) Reset() {
	*x = GeneticRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_genetic_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GeneticRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GeneticRes) ProtoMessage() {}

func (x *GeneticRes) ProtoReflect() protoreflect.Message {
	mi := &file_genetic_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GeneticRes.ProtoReflect.Descriptor instead.
func (*GeneticRes) Descriptor() ([]byte, []int) {
	return file_genetic_proto_rawDescGZIP(), []int{3}
}

func (x *GeneticRes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GeneticRes) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GeneticRes) GetDateType() string {
	if x != nil {
		return x.DateType
	}
	return ""
}

func (x *GeneticRes) GetDateValue() string {
	if x != nil {
		return x.DateValue
	}
	return ""
}

func (x *GeneticRes) GetAnalysisDate() string {
	if x != nil {
		return x.AnalysisDate
	}
	return ""
}

func (x *GeneticRes) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

func (x *GeneticRes) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GeneticRes) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

var File_genetic_proto protoreflect.FileDescriptor

var file_genetic_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x67, 0x65, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0b, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x1a, 0x0c, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x89, 0x01, 0x0a, 0x0d, 0x47,
	0x65, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73,
	0x69, 0x73, 0x44, 0x61, 0x74, 0x65, 0x22, 0x3a, 0x0a, 0x0b, 0x47, 0x65, 0x6e, 0x65, 0x74, 0x69,
	0x63, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73, 0x79, 0x6e,
	0x63, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x52, 0x65, 0x73, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0x99, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x64, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6e, 0x61,
	0x6c, 0x79, 0x73, 0x69, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x44, 0x61, 0x74, 0x65, 0x22, 0xf3,
	0x01, 0x0a, 0x0a, 0x47, 0x65, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x6e, 0x61, 0x6c, 0x79,
	0x73, 0x69, 0x73, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x32, 0xcf, 0x02, 0x0a, 0x0e, 0x47, 0x65, 0x6e, 0x65, 0x74, 0x69, 0x63,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x40, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x47, 0x65, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x12, 0x1a, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x1a, 0x11, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73, 0x79,
	0x6e, 0x63, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0d, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x12, 0x1a, 0x2e, 0x68, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x74, 0x69, 0x63,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x1a, 0x11, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f,
	0x73, 0x79, 0x6e, 0x63, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0d, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x74, 0x69, 0x63, 0x12, 0x14, 0x2e, 0x68,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79,
	0x49, 0x64, 0x1a, 0x11, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73, 0x79, 0x6e, 0x63,
	0x2e, 0x56, 0x6f, 0x69, 0x64, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x47, 0x65,
	0x6e, 0x65, 0x74, 0x69, 0x63, 0x12, 0x14, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73,
	0x79, 0x6e, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x1a, 0x17, 0x2e, 0x68, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x74, 0x69,
	0x63, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x65,
	0x6e, 0x65, 0x74, 0x69, 0x63, 0x12, 0x13, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73,
	0x79, 0x6e, 0x63, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x1a, 0x18, 0x2e, 0x68, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x74, 0x69, 0x63,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x42, 0x16, 0x5a, 0x14, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_genetic_proto_rawDescOnce sync.Once
	file_genetic_proto_rawDescData = file_genetic_proto_rawDesc
)

func file_genetic_proto_rawDescGZIP() []byte {
	file_genetic_proto_rawDescOnce.Do(func() {
		file_genetic_proto_rawDescData = protoimpl.X.CompressGZIP(file_genetic_proto_rawDescData)
	})
	return file_genetic_proto_rawDescData
}

var file_genetic_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_genetic_proto_goTypes = []any{
	(*GeneticCreate)(nil), // 0: health_sync.GeneticCreate
	(*GeneticList)(nil),   // 1: health_sync.GeneticList
	(*GeneticUpdate)(nil), // 2: health_sync.GeneticUpdate
	(*GeneticRes)(nil),    // 3: health_sync.GeneticRes
	(*GetById)(nil),       // 4: health_sync.GetById
	(*Filter)(nil),        // 5: health_sync.Filter
	(*Void)(nil),          // 6: health_sync.Void
}
var file_genetic_proto_depIdxs = []int32{
	3, // 0: health_sync.GeneticList.list:type_name -> health_sync.GeneticRes
	0, // 1: health_sync.GeneticService.CreateGenetic:input_type -> health_sync.GeneticCreate
	2, // 2: health_sync.GeneticService.UpdateGenetic:input_type -> health_sync.GeneticUpdate
	4, // 3: health_sync.GeneticService.DeleteGenetic:input_type -> health_sync.GetById
	4, // 4: health_sync.GeneticService.GetGenetic:input_type -> health_sync.GetById
	5, // 5: health_sync.GeneticService.ListGenetic:input_type -> health_sync.Filter
	6, // 6: health_sync.GeneticService.CreateGenetic:output_type -> health_sync.Void
	6, // 7: health_sync.GeneticService.UpdateGenetic:output_type -> health_sync.Void
	6, // 8: health_sync.GeneticService.DeleteGenetic:output_type -> health_sync.Void
	3, // 9: health_sync.GeneticService.GetGenetic:output_type -> health_sync.GeneticRes
	1, // 10: health_sync.GeneticService.ListGenetic:output_type -> health_sync.GeneticList
	6, // [6:11] is the sub-list for method output_type
	1, // [1:6] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_genetic_proto_init() }
func file_genetic_proto_init() {
	if File_genetic_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_genetic_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GeneticCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_genetic_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GeneticList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_genetic_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GeneticUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_genetic_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GeneticRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_genetic_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_genetic_proto_goTypes,
		DependencyIndexes: file_genetic_proto_depIdxs,
		MessageInfos:      file_genetic_proto_msgTypes,
	}.Build()
	File_genetic_proto = out.File
	file_genetic_proto_rawDesc = nil
	file_genetic_proto_goTypes = nil
	file_genetic_proto_depIdxs = nil
}
